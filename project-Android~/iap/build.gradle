apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly files('./libs/UnityPlayer.jar')
    implementation files('./libs/in-app-purchasing-2.0.76.jar')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

android.libraryVariants.all { variant ->

    // Task names.
    String variantName = "${variant.name.capitalize()}"; // Like 'Debug'
    String deployTaskGroup = "plugin";
    String deployTaskName = "deploy${variantName}Plugin"; // Like 'deployDebugPlugin'
    String dependencyTaskName = "assemble${variantName}"; // Like 'assembleDebug'

    // Source.
    String sourceAARFolder = "${buildDir.getPath()}/outputs/aar/";
    String sourceAARName = "${project.name}-${variant.name}.aar";

    // Target.
    //String targetAssetFolder = "Assets/Plugins/Flurry";
    String targetAssetFolder = "Project-Unity-AmazonIAP/Assets/Plugins/Amazon";
    //String targetAARFolder = "${rootDir.getPath()}/../../${targetAssetFolder}"; // Navigate into 'Assets'
    String targetAARFolder = "${rootDir.getPath()}/${targetAssetFolder}"; // Navigate into 'Assets'
    String targetAARName = "AmazonIAP.aar"; // The form you ship your plugin

    // Create task.
    task(deployTaskName, dependsOn: dependencyTaskName, type: Copy) {
        logger.lifecycle("${variant.name.capitalize()} AAR Folder: ${sourceAARFolder}")
        logger.lifecycle("${variant.name.capitalize()} Target AAR Folder: ${targetAARFolder}")
        logger.lifecycle("${variant.name.capitalize()} Target AAR name: ${targetAARName}")

        from(sourceAARFolder)
        into(targetAARFolder)
        include(sourceAARName)
        rename(sourceAARName, targetAARName)
    }.group = deployTaskGroup;
}
